package exit

// Auto generated by `mkerrs` in internal/cmd/mkerrs/main.go
// Do not edit this.
import "testing"

func TestMakeOK(t *testing.T) {
	err := MakeOK("this is the error msg")
	if err.(ok).ExitCode() != OK {
		t.Fatal("Failed to get exitcode in TestMakeOK")
	}
}

func TestMakeUSAGE(t *testing.T) {
	err := MakeUSAGE("this is the error msg")
	if err.(usage).ExitCode() != USAGE {
		t.Fatal("Failed to get exitcode in TestMakeUSAGE")
	}
}

func TestMakeDATAERR(t *testing.T) {
	err := MakeDATAERR("this is the error msg")
	if err.(dataerr).ExitCode() != DATAERR {
		t.Fatal("Failed to get exitcode in TestMakeDATAERR")
	}
}

func TestMakeNOINPUT(t *testing.T) {
	err := MakeNOINPUT("this is the error msg")
	if err.(noinput).ExitCode() != NOINPUT {
		t.Fatal("Failed to get exitcode in TestMakeNOINPUT")
	}
}

func TestMakeNOUSER(t *testing.T) {
	err := MakeNOUSER("this is the error msg")
	if err.(nouser).ExitCode() != NOUSER {
		t.Fatal("Failed to get exitcode in TestMakeNOUSER")
	}
}

func TestMakeNOHOST(t *testing.T) {
	err := MakeNOHOST("this is the error msg")
	if err.(nohost).ExitCode() != NOHOST {
		t.Fatal("Failed to get exitcode in TestMakeNOHOST")
	}
}

func TestMakeUNAVAILABLE(t *testing.T) {
	err := MakeUNAVAILABLE("this is the error msg")
	if err.(unavailable).ExitCode() != UNAVAILABLE {
		t.Fatal("Failed to get exitcode in TestMakeUNAVAILABLE")
	}
}

func TestMakeSOFTWARE(t *testing.T) {
	err := MakeSOFTWARE("this is the error msg")
	if err.(software).ExitCode() != SOFTWARE {
		t.Fatal("Failed to get exitcode in TestMakeSOFTWARE")
	}
}

func TestMakeOSERR(t *testing.T) {
	err := MakeOSERR("this is the error msg")
	if err.(oserr).ExitCode() != OSERR {
		t.Fatal("Failed to get exitcode in TestMakeOSERR")
	}
}

func TestMakeOSFILE(t *testing.T) {
	err := MakeOSFILE("this is the error msg")
	if err.(osfile).ExitCode() != OSFILE {
		t.Fatal("Failed to get exitcode in TestMakeOSFILE")
	}
}

func TestMakeCANTCREAT(t *testing.T) {
	err := MakeCANTCREAT("this is the error msg")
	if err.(cantcreat).ExitCode() != CANTCREAT {
		t.Fatal("Failed to get exitcode in TestMakeCANTCREAT")
	}
}

func TestMakeIOERR(t *testing.T) {
	err := MakeIOERR("this is the error msg")
	if err.(ioerr).ExitCode() != IOERR {
		t.Fatal("Failed to get exitcode in TestMakeIOERR")
	}
}

func TestMakeTEMPFAIL(t *testing.T) {
	err := MakeTEMPFAIL("this is the error msg")
	if err.(tempfail).ExitCode() != TEMPFAIL {
		t.Fatal("Failed to get exitcode in TestMakeTEMPFAIL")
	}
}

func TestMakePROTOCOL(t *testing.T) {
	err := MakePROTOCOL("this is the error msg")
	if err.(protocol).ExitCode() != PROTOCOL {
		t.Fatal("Failed to get exitcode in TestMakePROTOCOL")
	}
}

func TestMakeNOPERM(t *testing.T) {
	err := MakeNOPERM("this is the error msg")
	if err.(noperm).ExitCode() != NOPERM {
		t.Fatal("Failed to get exitcode in TestMakeNOPERM")
	}
}

func TestMakeCONFIG(t *testing.T) {
	err := MakeCONFIG("this is the error msg")
	if err.(config).ExitCode() != CONFIG {
		t.Fatal("Failed to get exitcode in TestMakeCONFIG")
	}
}
